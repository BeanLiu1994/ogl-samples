///////////////////////////////////////////////////////////////////////////////////
/// OpenGL Image (gli.g-truc.net)
///
/// Copyright (c) 2008 - 2013 G-Truc Creation (www.g-truc.net)
/// Permission is hereby granted, free of charge, to any person obtaining a copy
/// of this software and associated documentation files (the "Software"), to deal
/// in the Software without restriction, including without limitation the rights
/// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
/// copies of the Software, and to permit persons to whom the Software is
/// furnished to do so, subject to the following conditions:
/// 
/// The above copyright notice and this permission notice shall be included in
/// all copies or substantial portions of the Software.
/// 
/// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
/// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
/// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
/// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
/// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
/// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
/// THE SOFTWARE.
///
/// @ref core
/// @file gli/core/format.inl
/// @date 2012-10-16 / 2012-10-16
/// @author Christophe Riccio
///////////////////////////////////////////////////////////////////////////////////

namespace gli{
namespace detail
{
/*
	enum
	{
		FORMAT_COMPRESSED_BIT = (1 << 0),
		FORMAT_PACKED_BIT = (1 << 1),
		FORMAT_UNSIGNED_BIT =  (1 << 2),
		FORMAT_SIGNED_BIT =  (1 << 3),
		FORMAT_SCALED_BIT =  (1 << 4),
		FORMAT_INTEGER_BIT =  (1 << 5),
		FORMAT_FLOAT_BIT =  (1 << 6),
		FORMAT_NORMALIZED_BIT =  (1 << 7),
		FORMAT_DEPTH_BIT =  (1 << 8),
		FORMAT_COLOR_SPACE_LINEAR_BIT =  (1 << 10),
		FORMAT_COLOR_SPACE_SRGB_BIT =  (1 << 11)
	};

	struct format_info
	{
		std::size_t BlockSize;
		gli::dim3_t BlockDimensions;
		std::size_t BBP;
		std::size_t Component;
		std::size_t Flags;
	};

	inline format_info const & getFormatInfo(format const & Format)
	{
		static format_info const Table[] =
		{
			// unorm formats
			{  1, gli::dim3_t(1),  8,  1, FORMAT_COLOR_SPACE_LINEAR_BIT},		//R8_UNORM,
			{  2, gli::dim3_t(1), 16,  2, FORMAT_COLOR_SPACE_LINEAR_BIT},		//RG8_UNORM,
			{  3, gli::dim3_t(1), 24,  3, FORMAT_COLOR_SPACE_LINEAR_BIT},		//RGB8_UNORM,
			{  4, gli::dim3_t(1), 32,  4, FORMAT_COLOR_SPACE_LINEAR_BIT},		//RGBA8_UNORM,

			{  2, gli::dim3_t(1), 16,  1, FORMAT_COLOR_SPACE_LINEAR_BIT},		//R16_UNORM,
			{  4, gli::dim3_t(1), 32,  2, FORMAT_COLOR_SPACE_LINEAR_BIT},		//RG16_UNORM,
			{  6, gli::dim3_t(1), 48,  3, FORMAT_COLOR_SPACE_LINEAR_BIT},		//RGB16_UNORM,
			{  8, gli::dim3_t(1), 64,  4, FORMAT_COLOR_SPACE_LINEAR_BIT},		//RGBA16_UNORM,

			{  4, gli::dim3_t(1), 32,  4, FORMAT_COLOR_SPACE_LINEAR_BIT},		//RGB10A2_UNORM,

			// snorm formats
			{  1, gli::dim3_t(1),  8,  1, FORMAT_COLOR_SPACE_LINEAR_BIT},		//R8_SNORM,
			{  2, gli::dim3_t(1), 16,  2, FORMAT_COLOR_SPACE_LINEAR_BIT},		//RG8_SNORM,
			{  3, gli::dim3_t(1), 24,  3, FORMAT_COLOR_SPACE_LINEAR_BIT},		//RGB8_SNORM,
			{  4, gli::dim3_t(1), 32,  4, FORMAT_COLOR_SPACE_LINEAR_BIT},		//RGBA8_SNORM,

			{  2, gli::dim3_t(1), 16,  1, false, INTERNAL_R16_SNORM, EXTERNAL_RED, EXTERNAL_RED, TYPE_I16, DDPF_FOURCC, D3DFMT_DX10, DXGI_FORMAT_R16_SNORM},					//R16_SNORM,
			{  4, gli::dim3_t(1), 32,  2, false, INTERNAL_RG16_SNORM, EXTERNAL_RG, EXTERNAL_RG, TYPE_I16, DDPF_FOURCC, D3DFMT_DX10, DXGI_FORMAT_R16G16_SNORM},				//RG16_SNORM,
			{  6, gli::dim3_t(1), 48,  3, false, INTERNAL_RGB16_SNORM, EXTERNAL_RGB, EXTERNAL_BGR, TYPE_I16, DDPF_FOURCC, D3DFMT_DX10, DXGI_FORMAT_UNKNOWN},					//RGB16_SNORM,
			{  8, gli::dim3_t(1), 64,  4, false, INTERNAL_RGBA16_SNORM, EXTERNAL_RGBA, EXTERNAL_BGRA, TYPE_I16, DDPF_FOURCC, D3DFMT_DX10, DXGI_FORMAT_R16G16B16A16_SNORM},	//RGBA16_SNORM,

			// Unsigned integer formats
			{  1, gli::dim3_t(1),  8,  1, false, INTERNAL_R8U, EXTERNAL_RED_INTEGER, EXTERNAL_RED_INTEGER, TYPE_U8, DDPF_FOURCC, D3DFMT_DX10, DXGI_FORMAT_R8_UINT},				//R8U,
			{  2, gli::dim3_t(1), 16,  2, false, INTERNAL_RG8U, EXTERNAL_RG_INTEGER, EXTERNAL_RG_INTEGER, TYPE_U8, DDPF_FOURCC, D3DFMT_DX10, DXGI_FORMAT_R8G8_UINT},				//RG8U,
			{  3, gli::dim3_t(1), 24,  3, false, INTERNAL_RGB8U, EXTERNAL_RGB_INTEGER, EXTERNAL_BGR_INTEGER, TYPE_U8, DDPF_FOURCC, D3DFMT_DX10, DXGI_FORMAT_UNKNOWN},			//RGB8U,
			{  4, gli::dim3_t(1), 32,  4, false, INTERNAL_RGBA8U, EXTERNAL_RGBA_INTEGER, EXTERNAL_BGRA_INTEGER, TYPE_U8, DDPF_FOURCC, D3DFMT_DX10, DXGI_FORMAT_R8G8B8A8_UINT},	//RGBA8U,

			{  2, gli::dim3_t(1), 16,  1, false, INTERNAL_R16U, EXTERNAL_RED_INTEGER, EXTERNAL_RED_INTEGER, TYPE_U16, DDPF_FOURCC, D3DFMT_DX10, DXGI_FORMAT_R16_UINT},				//R16U,
			{  4, gli::dim3_t(1), 32,  2, false, INTERNAL_RG16U, EXTERNAL_RG_INTEGER, EXTERNAL_RG_INTEGER, TYPE_U16, DDPF_FOURCC, D3DFMT_DX10, DXGI_FORMAT_R16G16_UINT},				//RG16U,
			{  6, gli::dim3_t(1), 48,  3, false, INTERNAL_RGB16U, EXTERNAL_RGB_INTEGER, EXTERNAL_BGR_INTEGER, TYPE_U16, DDPF_FOURCC, D3DFMT_DX10, DXGI_FORMAT_UNKNOWN},				//RGB16U,
			{  8, gli::dim3_t(1), 64,  4, false, INTERNAL_RGBA16U, EXTERNAL_RGBA_INTEGER, EXTERNAL_BGRA_INTEGER, TYPE_U16, DDPF_FOURCC, D3DFMT_DX10, DXGI_FORMAT_R16G16B16A16_UINT},	//RGBA16U,

			{  4, gli::dim3_t(1),  32,  1, false, INTERNAL_R32U, EXTERNAL_RED_INTEGER, EXTERNAL_RED_INTEGER, TYPE_U32, DDPF_FOURCC, D3DFMT_DX10, DXGI_FORMAT_R32_UINT},					//R32U,
			{  8, gli::dim3_t(1),  64,  2, false, INTERNAL_RG32U, EXTERNAL_RG_INTEGER, EXTERNAL_RG_INTEGER, TYPE_U32, DDPF_FOURCC, D3DFMT_DX10, DXGI_FORMAT_R32G32_UINT},				//RG32U,
			{ 12, gli::dim3_t(1),  96,  3, false, INTERNAL_RGB32U, EXTERNAL_RGB_INTEGER, EXTERNAL_RGB_INTEGER, TYPE_U32, DDPF_FOURCC, D3DFMT_DX10, DXGI_FORMAT_R32G32B32_UINT},			//RGB32U,
			{ 16, gli::dim3_t(1), 128,  4, false, INTERNAL_RGBA32U, EXTERNAL_RGBA_INTEGER, EXTERNAL_RGBA_INTEGER, TYPE_U32, DDPF_FOURCC, D3DFMT_DX10, DXGI_FORMAT_R32G32B32A32_UINT},	//RGBA32U,

			{  4, gli::dim3_t(1), 32,  4, false, INTERNAL_RGB10A2U, EXTERNAL_RGBA, EXTERNAL_BGRA, TYPE_UINT32_RGB10A2, DDPF_FOURCC, D3DFMT_DX10, DXGI_FORMAT_R10G10B10A2_UINT},				//RGB10A2U,

			/// Signed integer formats
			{  1, gli::dim3_t(1),  32,  1, false, INTERNAL_R8I, EXTERNAL_RED_INTEGER, EXTERNAL_RED_INTEGER, TYPE_I8, DDPF_FOURCC, D3DFMT_DX10, DXGI_FORMAT_R8_SINT},					//R8I,
			{  2, gli::dim3_t(1),  64,  2, false, INTERNAL_RG8I, EXTERNAL_RED_INTEGER, EXTERNAL_RG_INTEGER, TYPE_I8, DDPF_FOURCC, D3DFMT_DX10, DXGI_FORMAT_R8G8_SINT},				//RG8I,
			{  3, gli::dim3_t(1),  96,  3, false, INTERNAL_RGB8I, EXTERNAL_RED_INTEGER, EXTERNAL_RGB_INTEGER, TYPE_I8, DDPF_FOURCC, D3DFMT_DX10, DXGI_FORMAT_UNKNOWN},				//RGB8I,
			{  4, gli::dim3_t(1), 128,  4, false, INTERNAL_RGBA8I, EXTERNAL_RED_INTEGER, EXTERNAL_RGBA_INTEGER, TYPE_I8, DDPF_FOURCC, D3DFMT_DX10, DXGI_FORMAT_R8G8B8A8_SINT},		//RGBA8I,

			{  2, gli::dim3_t(1), 16,  1, false, INTERNAL_R16I, EXTERNAL_RED_INTEGER, EXTERNAL_RED_INTEGER, TYPE_I16, DDPF_FOURCC, D3DFMT_DX10, DXGI_FORMAT_R16_SINT},				//R16I,
			{  4, gli::dim3_t(1), 32,  2, false, INTERNAL_RG16I, EXTERNAL_RED_INTEGER, EXTERNAL_RG_INTEGER, TYPE_I16, DDPF_FOURCC, D3DFMT_DX10, DXGI_FORMAT_R16G16_SINT},			//RG16I,
			{  6, gli::dim3_t(1), 48,  3, false, INTERNAL_RGB16I, EXTERNAL_RED_INTEGER, EXTERNAL_RGB_INTEGER, TYPE_I16, DDPF_FOURCC, D3DFMT_DX10, DXGI_FORMAT_UNKNOWN},				//RGB16I,
			{  8, gli::dim3_t(1), 64,  4, false, INTERNAL_RGBA16I, EXTERNAL_RED_INTEGER, EXTERNAL_RGBA_INTEGER, TYPE_I16, DDPF_FOURCC, D3DFMT_DX10, DXGI_FORMAT_R16G16B16A16_SINT},	//RGBA16I,

			{  4, gli::dim3_t(1),  32,  1, false, INTERNAL_R32I, EXTERNAL_RED_INTEGER, EXTERNAL_RED_INTEGER, TYPE_I32, DDPF_FOURCC, D3DFMT_DX10, DXGI_FORMAT_R32_SINT},				//R32I,
			{  8, gli::dim3_t(1),  64,  2, false, INTERNAL_RG32I, EXTERNAL_RED_INTEGER, EXTERNAL_RG_INTEGER, TYPE_I32, DDPF_FOURCC, D3DFMT_DX10, DXGI_FORMAT_R32G32_SINT},			//RG32I,
			{ 12, gli::dim3_t(1),  96,  3, false, INTERNAL_RGB32I, EXTERNAL_RED_INTEGER, EXTERNAL_RGB_INTEGER, TYPE_I32, DDPF_FOURCC, D3DFMT_DX10, DXGI_FORMAT_R32G32B32_SINT},		//RGB32I,
			{ 16, gli::dim3_t(1), 128,  4, false, INTERNAL_RGBA32I, EXTERNAL_RED_INTEGER, EXTERNAL_RGBA_INTEGER, TYPE_I32, DDPF_FOURCC, D3DFMT_DX10, DXGI_FORMAT_R32G32B32A32_SINT},	//RGBA32I,

			/// Floating formats
			{  2, gli::dim3_t(1), 16,  1, false, INTERNAL_R16F, EXTERNAL_RED, EXTERNAL_RED, TYPE_F16, DDPF_LUMINANCE, D3DFMT_R16F, DXGI_FORMAT_R16_FLOAT},								//R16F,
			{  4, gli::dim3_t(1), 32,  2, false, INTERNAL_RG16F, EXTERNAL_RG, EXTERNAL_RG, TYPE_F16, DDPF_LUMINANCE|DDPF_ALPHAPIXELS,  DXGI_FORMAT_R16G16_FLOAT},						//RG16F,
			{  6, gli::dim3_t(1), 48,  3, false, INTERNAL_RGB16F, EXTERNAL_RGB, EXTERNAL_RGB, TYPE_F16, DDPF_RGB, D3DFMT_DX10, DXGI_FORMAT_UNKNOWN},										//RGB16F,
			{  8, gli::dim3_t(1), 64,  4, false, INTERNAL_RGBA16F, EXTERNAL_RGBA, EXTERNAL_RGBA, TYPE_F16, DDPF_RGB|DDPF_ALPHA, D3DFMT_A16B16G16R16F, DXGI_FORMAT_R16G16B16A16_FLOAT},	//RGBA16F,

			{  4, gli::dim3_t(1),  32,  1, false, INTERNAL_R32F, EXTERNAL_RED, EXTERNAL_RED, TYPE_F32, DDPF_LUMINANCE, D3DFMT_R32F, DXGI_FORMAT_R32_FLOAT},									//R32F,
			{  8, gli::dim3_t(1),  64,  2, false, INTERNAL_RG32F, EXTERNAL_RG, EXTERNAL_RG, TYPE_F32, DDPF_LUMINANCE|DDPF_ALPHAPIXELS, D3DFMT_G32R32F, DXGI_FORMAT_R32G32_FLOAT},			//RG32F,
			{ 12, gli::dim3_t(1),  96,  3, false, INTERNAL_RGB32F, EXTERNAL_RGB, EXTERNAL_RGB, TYPE_F32, DDPF_FOURCC, D3DFMT_DX10, DXGI_FORMAT_R32G32B32_FLOAT},								//RGB32F,
			{ 16, gli::dim3_t(1), 128,  4, false, INTERNAL_RGBA32F, EXTERNAL_RGBA, EXTERNAL_RGBA, TYPE_F32, DDPF_RGB|DDPF_ALPHA, D3DFMT_A32B32G32R32F, DXGI_FORMAT_R32G32B32A32_FLOAT},		//RGBA32F,

			/// sRGB formats
			{  3, gli::dim3_t(1), 24,  3, false, INTERNAL_SR8, EXTERNAL_RED, EXTERNAL_RED, TYPE_U8, DDPF_FOURCC, D3DFMT_UNKNOWN, DXGI_FORMAT_UNKNOWN},								//SR8,
			{  3, gli::dim3_t(1), 24,  3, false, INTERNAL_SRG8, EXTERNAL_RG, EXTERNAL_RG, TYPE_U8, DDPF_FOURCC, D3DFMT_UNKNOWN, DXGI_FORMAT_UNKNOWN},								//SRG8,
			{  3, gli::dim3_t(1), 24,  3, false, INTERNAL_SRGB8, EXTERNAL_RGB, EXTERNAL_BGR, TYPE_U8, DDPF_FOURCC, D3DFMT_DX10, DXGI_FORMAT_B8G8R8X8_UNORM_SRGB},					//SRGB8,
			{  4, gli::dim3_t(1), 32,  4, false, INTERNAL_SRGB8_ALPHA8, EXTERNAL_RGBA, EXTERNAL_BGRA, TYPE_U8, DDPF_FOURCC, D3DFMT_DX10, DXGI_FORMAT_B8G8R8A8_UNORM_SRGB},			//SRGB8_ALPHA8,

			/// Packed formats
			{  4, gli::dim3_t(1), 32,  3, false, INTERNAL_RGB9E5, EXTERNAL_RGBA, EXTERNAL_BGRA, TYPE_UINT32_RGB9_E5, DDPF_FOURCC, D3DFMT_DX10, DXGI_FORMAT_R9G9B9E5_SHAREDEXP},	//RGB9E5,
			{  4, gli::dim3_t(1), 32,  3, false, INTERNAL_RG11B10F, EXTERNAL_RGBA, EXTERNAL_BGRA, TYPE_UINT32_RG11B10F, DDPF_FOURCC, D3DFMT_DX10, DXGI_FORMAT_R11G11B10_FLOAT},	//RG11B10F,
			{  1, gli::dim3_t(1),  8,  3, false, INTERNAL_RG3B2, EXTERNAL_RGB, EXTERNAL_BGR, TYPE_UINT8_RG3B2, DDPF_FOURCC, D3DFMT_DX10, DXGI_FORMAT_UNKNOWN},					//RG3B2,
			{  2, gli::dim3_t(1), 16,  3, false, INTERNAL_R5G6B5, EXTERNAL_RGB, EXTERNAL_BGR, TYPE_UINT16_R5G6B5, DDPF_FOURCC, D3DFMT_DX10, DXGI_FORMAT_B5G6R5_UNORM},			//R5G6B5,
			{  2, gli::dim3_t(1), 16,  4, false, INTERNAL_RGB5A1, EXTERNAL_RGBA, EXTERNAL_BGRA, TYPE_UINT16_RGB5A1, DDPF_FOURCC, D3DFMT_DX10, DXGI_FORMAT_B5G5R5A1_UNORM},		//RGB5A1,
			{  2, gli::dim3_t(1), 16,  4, false, INTERNAL_RGBA4, EXTERNAL_RGBA, EXTERNAL_BGRA, TYPE_UINT16_RGBA4, DDPF_RGB|DDPF_ALPHA, D3DFMT_A4R4G4B4, DXGI_FORMAT_UNKNOWN},	//RGBA4,

			/// Depth formats
			{  2, gli::dim3_t(1), 16,  1, false, INTERNAL_D16, EXTERNAL_DEPTH, EXTERNAL_DEPTH, TYPE_NONE, DDPF_FOURCC, D3DFMT_DX10, DXGI_FORMAT_D16_UNORM},						//D16,
			{  4, gli::dim3_t(1), 32,  1, false, INTERNAL_D24, EXTERNAL_DEPTH, EXTERNAL_DEPTH, TYPE_NONE, DDPF_FOURCC, D3DFMT_DX10, DXGI_FORMAT_UNKNOWN},						//D24X8,
			{  4, gli::dim3_t(1), 32,  2, false, INTERNAL_D24S8, EXTERNAL_DEPTH_STENCIL, EXTERNAL_DEPTH_STENCIL, TYPE_NONE, DDPF_FOURCC, D3DFMT_DX10, DXGI_FORMAT_D24_UNORM_S8_UINT},			//D24S8,
			{  4, gli::dim3_t(1), 32,  1, false, INTERNAL_D32F, EXTERNAL_DEPTH, EXTERNAL_DEPTH, TYPE_NONE, DDPF_FOURCC, D3DFMT_DX10, DXGI_FORMAT_D32_FLOAT},						//D32F,
			{  8, gli::dim3_t(1), 64,  2, false, INTERNAL_D32FS8X24, EXTERNAL_DEPTH_STENCIL, EXTERNAL_DEPTH_STENCIL, TYPE_NONE, DDPF_FOURCC, D3DFMT_DX10, DXGI_FORMAT_D32_FLOAT_S8X24_UINT},		//D32FS8X24,

			/// Compressed formats
			{  8, gli::dim3_t(4, 4, 1), 4,  3, true, INTERNAL_RGB_DXT1, EXTERNAL_RGB_DXT1, EXTERNAL_RGB_DXT1, TYPE_NONE, DDPF_FOURCC, D3DFMT_DXT1, DXGI_FORMAT_BC1_UNORM},				//RGB_DXT1,
			{  8, gli::dim3_t(4, 4, 1), 4,  4, true, INTERNAL_RGBA_DXT1, EXTERNAL_RGBA_DXT1, EXTERNAL_RGBA_DXT1, TYPE_NONE, DDPF_FOURCC | DDPF_ALPHAPIXELS, D3DFMT_DXT1, DXGI_FORMAT_BC1_UNORM},		//RGBA_DXT1,
			{ 16, gli::dim3_t(4, 4, 1), 8,  4, true, INTERNAL_RGBA_DXT3, EXTERNAL_RGBA_DXT3, EXTERNAL_RGBA_DXT3, TYPE_NONE, DDPF_FOURCC | DDPF_ALPHAPIXELS, D3DFMT_DXT3, DXGI_FORMAT_BC2_UNORM},		//RGBA_DXT3,
			{ 16, gli::dim3_t(4, 4, 1), 8,  4, true, INTERNAL_RGBA_DXT5, EXTERNAL_RGBA_DXT5, EXTERNAL_RGBA_DXT5, TYPE_NONE, DDPF_FOURCC | DDPF_ALPHAPIXELS, D3DFMT_DXT5, DXGI_FORMAT_BC3_UNORM},		//RGBA_DXT5,
			{  8, gli::dim3_t(4, 4, 1), 4,  1, true, INTERNAL_R_ATI1N_UNORM, EXTERNAL_R_ATI1N_UNORM, EXTERNAL_R_ATI1N_UNORM, TYPE_NONE, DDPF_FOURCC, D3DFMT_DX10, DXGI_FORMAT_BC4_UNORM},			//R_ATI1N_UNORM,
			{  8, gli::dim3_t(4, 4, 1), 4,  1, true, INTERNAL_R_ATI1N_SNORM, EXTERNAL_R_ATI1N_SNORM, EXTERNAL_R_ATI1N_SNORM, TYPE_NONE, DDPF_FOURCC, D3DFMT_DX10, DXGI_FORMAT_BC4_SNORM},			//R_ATI1N_SNORM,
			{ 16, gli::dim3_t(4, 4, 1), 8,  2, true, INTERNAL_RG_ATI2N_UNORM, EXTERNAL_RG_ATI2N_UNORM, EXTERNAL_RG_ATI2N_UNORM, TYPE_NONE, DDPF_FOURCC, D3DFMT_DX10, DXGI_FORMAT_BC5_UNORM},			//RG_ATI2N_UNORM,
			{ 16, gli::dim3_t(4, 4, 1), 8,  2, true, INTERNAL_RG_ATI2N_SNORM, EXTERNAL_RG_ATI2N_SNORM, EXTERNAL_RG_ATI2N_SNORM, TYPE_NONE, DDPF_FOURCC, D3DFMT_DX10, DXGI_FORMAT_BC5_SNORM},			//RG_ATI2N_SNORM,
			{ 16, gli::dim3_t(4, 4, 1), 8,  3, true, INTERNAL_RGB_BP_UNSIGNED_FLOAT, EXTERNAL_RGB_BP_UNSIGNED_FLOAT, EXTERNAL_RGB_BP_UNSIGNED_FLOAT, TYPE_NONE, DDPF_FOURCC, D3DFMT_DX10, DXGI_FORMAT_BC6H_UF16},		//RGB_BP_UF16,
			{ 16, gli::dim3_t(4, 4, 1), 8,  3, true, INTERNAL_RGB_BP_SIGNED_FLOAT, EXTERNAL_RGB_BP_SIGNED_FLOAT, EXTERNAL_RGB_BP_SIGNED_FLOAT, TYPE_NONE, DDPF_FOURCC, D3DFMT_DX10, DXGI_FORMAT_BC6H_SF16},				//RGB_BP_SF16,
			{ 16, gli::dim3_t(4, 4, 1), 8,  3, true, INTERNAL_RGB_BP_UNORM, EXTERNAL_RGB_BP_UNORM, EXTERNAL_RGB_BP_UNORM, TYPE_NONE, DDPF_FOURCC, D3DFMT_DX10, DXGI_FORMAT_BC7_UNORM},									//RGB_BP_UNORM,
			{  8, gli::dim3_t(4, 4, 1), 4,  3, true, INTERNAL_RGB_PVRTC_4BPPV1, EXTERNAL_RGB_PVRTC_4BPPV1, EXTERNAL_RGB_PVRTC_4BPPV1, TYPE_NONE, DDPF_FOURCC, D3DFMT_POWERVR_4BPP, DXGI_FORMAT_UNKNOWN},			//RGB_PVRTC_4BPPV1,
			{  4, gli::dim3_t(4, 4, 1), 2,  3, true, INTERNAL_RGB_PVRTC_2BPPV1, EXTERNAL_RGB_PVRTC_2BPPV1, EXTERNAL_RGB_PVRTC_2BPPV1, TYPE_NONE, DDPF_FOURCC, D3DFMT_POWERVR_2BPP, DXGI_FORMAT_UNKNOWN},			//RGB_PVRTC_2BPPV1,
			{  8, gli::dim3_t(4, 4, 1), 4,  4, true, INTERNAL_RGB_PVRTC_4BPPV1, EXTERNAL_RGBA_PVRTC_4BPPV1, EXTERNAL_RGBA_PVRTC_4BPPV1, TYPE_NONE, DDPF_FOURCC, D3DFMT_POWERVR_4BPP, DXGI_FORMAT_UNKNOWN},		//RGBA_PVRTC_4BPPV1,
			{  4, gli::dim3_t(4, 4, 1), 2,  4, true, INTERNAL_RGB_PVRTC_2BPPV1, EXTERNAL_RGBA_PVRTC_2BPPV1, EXTERNAL_RGBA_PVRTC_2BPPV1, TYPE_NONE, DDPF_FOURCC, D3DFMT_POWERVR_2BPP, DXGI_FORMAT_UNKNOWN},		//RGBA_PVRTC_2BPPV1,
			{  8, gli::dim3_t(4, 4, 1), 4,  3, true, INTERNAL_ATC_RGB, EXTERNAL_ATC_RGB, EXTERNAL_ATC_RGB, TYPE_NONE, DDPF_FOURCC, D3DFMT_ETC1, DXGI_FORMAT_UNKNOWN},																	//ATC_RGB,
			{ 16, gli::dim3_t(4, 4, 1), 4,  4, true, INTERNAL_ATC_RGBA_EXPLICIT_ALPHA, EXTERNAL_ATC_RGBA_EXPLICIT_ALPHA, EXTERNAL_ATC_RGBA_EXPLICIT_ALPHA, TYPE_NONE, DDPF_FOURCC, D3DFMT_ETC1, DXGI_FORMAT_UNKNOWN},					//ATC_RGBA_EXPLICIT_ALPHA,
			{ 16, gli::dim3_t(4, 4, 1), 4,  4, true, INTERNAL_ATC_RGBA_INTERPOLATED_ALPHA, EXTERNAL_ATC_RGBA_INTERPOLATED_ALPHA, EXTERNAL_ATC_RGBA_INTERPOLATED_ALPHA, TYPE_NONE, DDPF_FOURCC, D3DFMT_ETC1, DXGI_FORMAT_UNKNOWN},		//ATC_RGBA_INTERPOLATED_ALPHA,
			{ 16, gli::dim3_t(4, 4, 1), 0,  4, true, INTERNAL_RGBA_ASTC_4x4, EXTERNAL_RGBA_ASTC_4x4, EXTERNAL_RGBA_ASTC_4x4, TYPE_NONE, DDPF_FOURCC, D3DFMT_UNKNOWN, DXGI_FORMAT_UNKNOWN},				//RGBA_ASTC_4x4,
			{ 16, gli::dim3_t(5, 4, 1), 0,  4, true, INTERNAL_RGBA_ASTC_5x4, EXTERNAL_RGBA_ASTC_5x4, EXTERNAL_RGBA_ASTC_5x4, TYPE_NONE, DDPF_FOURCC, D3DFMT_UNKNOWN, DXGI_FORMAT_UNKNOWN},				//RGBA_ASTC_5x4,
			{ 16, gli::dim3_t(5, 5, 1), 0,  4, true, INTERNAL_RGBA_ASTC_5x5, EXTERNAL_RGBA_ASTC_5x5, EXTERNAL_RGBA_ASTC_5x5, TYPE_NONE, DDPF_FOURCC, D3DFMT_UNKNOWN, DXGI_FORMAT_UNKNOWN},				//RGBA_ASTC_5x5,
			{ 16, gli::dim3_t(6, 5, 1), 0,  4, true, INTERNAL_RGBA_ASTC_6x5, EXTERNAL_RGBA_ASTC_6x5, EXTERNAL_RGBA_ASTC_6x5, TYPE_NONE, DDPF_FOURCC, D3DFMT_UNKNOWN, DXGI_FORMAT_UNKNOWN},				//RGBA_ASTC_6x5,
			{ 16, gli::dim3_t(6, 6, 1), 0,  4, true, INTERNAL_RGBA_ASTC_6x6, EXTERNAL_RGBA_ASTC_6x6, EXTERNAL_RGBA_ASTC_6x6, TYPE_NONE, DDPF_FOURCC, D3DFMT_UNKNOWN, DXGI_FORMAT_UNKNOWN},				//RGBA_ASTC_6x6,
			{ 16, gli::dim3_t(8, 5, 1), 0,  4, true, INTERNAL_RGBA_ASTC_8x5, EXTERNAL_RGBA_ASTC_8x5, EXTERNAL_RGBA_ASTC_8x5, TYPE_NONE, DDPF_FOURCC, D3DFMT_UNKNOWN, DXGI_FORMAT_UNKNOWN},				//RGBA_ASTC_8x5,
			{ 16, gli::dim3_t(8, 6, 1), 0,  4, true, INTERNAL_RGBA_ASTC_8x6, EXTERNAL_RGBA_ASTC_8x6, EXTERNAL_RGBA_ASTC_8x6, TYPE_NONE, DDPF_FOURCC, D3DFMT_UNKNOWN, DXGI_FORMAT_UNKNOWN},				//RGBA_ASTC_8x6,
			{ 16, gli::dim3_t(8, 8, 1), 0,  4, true, INTERNAL_RGBA_ASTC_8x8, EXTERNAL_RGBA_ASTC_8x8, EXTERNAL_RGBA_ASTC_8x8, TYPE_NONE, DDPF_FOURCC, D3DFMT_UNKNOWN, DXGI_FORMAT_UNKNOWN},				//RGBA_ASTC_8x8,
			{ 16, gli::dim3_t(10, 5, 1), 0,  4, true, INTERNAL_RGBA_ASTC_10x5, EXTERNAL_RGBA_ASTC_10x5, EXTERNAL_RGBA_ASTC_10x5, TYPE_NONE, DDPF_FOURCC, D3DFMT_UNKNOWN, DXGI_FORMAT_UNKNOWN},			//RGBA_ASTC_10x5,
			{ 16, gli::dim3_t(10, 6, 1), 0,  4, true, INTERNAL_RGBA_ASTC_10x6, EXTERNAL_RGBA_ASTC_10x6, EXTERNAL_RGBA_ASTC_10x6, TYPE_NONE, DDPF_FOURCC, D3DFMT_UNKNOWN, DXGI_FORMAT_UNKNOWN},			//RGBA_ASTC_10x6,
			{ 16, gli::dim3_t(10, 8, 1), 0,  4, true, INTERNAL_RGBA_ASTC_10x8, EXTERNAL_RGBA_ASTC_10x8, EXTERNAL_RGBA_ASTC_10x8, TYPE_NONE, DDPF_FOURCC, D3DFMT_UNKNOWN, DXGI_FORMAT_UNKNOWN},			//RGBA_ASTC_10x8,
			{ 16, gli::dim3_t(10, 10, 1), 0,  4, true, INTERNAL_RGBA_ASTC_10x10, EXTERNAL_RGBA_ASTC_10x10, EXTERNAL_RGBA_ASTC_10x10, TYPE_NONE, DDPF_FOURCC, D3DFMT_UNKNOWN, DXGI_FORMAT_UNKNOWN},		//RGBA_ASTC_10x10,
			{ 16, gli::dim3_t(12, 10, 1), 0,  4, true, INTERNAL_RGBA_ASTC_12x10, EXTERNAL_RGBA_ASTC_12x10, EXTERNAL_RGBA_ASTC_12x10, TYPE_NONE, DDPF_FOURCC, D3DFMT_UNKNOWN, DXGI_FORMAT_UNKNOWN},		//RGBA_ASTC_12x10,
			{ 16, gli::dim3_t(12, 12, 1), 0,  4, true, INTERNAL_RGBA_ASTC_12x12, EXTERNAL_RGBA_ASTC_12x12, EXTERNAL_RGBA_ASTC_12x12, TYPE_NONE, DDPF_FOURCC, D3DFMT_UNKNOWN, DXGI_FORMAT_UNKNOWN},		//RGBA_ASTC_12x12,

			// Compressed sRGB formats
			{  8, gli::dim3_t(4, 4, 1), 4,  3, true, INTERNAL_SRGB_DXT1, EXTERNAL_NONE, EXTERNAL_NONE, TYPE_NONE, DDPF_FOURCC, D3DFMT_DX10, DXGI_FORMAT_BC1_UNORM_SRGB},				//sRGB_DXT1,
			{  8, gli::dim3_t(4, 4, 1), 4,  4, true, INTERNAL_SRGB_ALPHA_DXT1, EXTERNAL_NONE, EXTERNAL_NONE, TYPE_NONE, DDPF_FOURCC, D3DFMT_DX10, DXGI_FORMAT_BC1_UNORM_SRGB},		//sRGB_DXT1,
			{ 16, gli::dim3_t(4, 4, 1), 8,  4, true, INTERNAL_SRGB_ALPHA_DXT3, EXTERNAL_NONE, EXTERNAL_NONE, TYPE_NONE, DDPF_FOURCC, D3DFMT_DX10, DXGI_FORMAT_BC2_UNORM_SRGB},		//sRGB_DXT3,
			{ 16, gli::dim3_t(4, 4, 1), 8,  4, true, INTERNAL_SRGB_ALPHA_DXT5, EXTERNAL_NONE, EXTERNAL_NONE, TYPE_NONE, DDPF_FOURCC, D3DFMT_DX10, DXGI_FORMAT_BC3_UNORM_SRGB},		//sRGB_DXT5,
			{ 16, gli::dim3_t(4, 4, 1), 8,  3, true, INTERNAL_SRGB_BP_UNORM, EXTERNAL_NONE, EXTERNAL_NONE, TYPE_NONE, DDPF_FOURCC, D3DFMT_DX10, DXGI_FORMAT_BC7_UNORM_SRGB},			//sRGB_BP,
			{  8, gli::dim3_t(4, 4, 1), 4,  3, true, INTERNAL_SRGB_PVRTC_2BPPV1, EXTERNAL_RGB_PVRTC_4BPPV1, EXTERNAL_RGB_PVRTC_4BPPV1, TYPE_NONE, DDPF_FOURCC, D3DFMT_POWERVR_4BPP, DXGI_FORMAT_UNKNOWN},				//RGB_PVRTC_4BPPV1,
			{  4, gli::dim3_t(4, 4, 1), 2,  3, true, INTERNAL_SRGB_PVRTC_4BPPV1, EXTERNAL_RGB_PVRTC_2BPPV1, EXTERNAL_RGB_PVRTC_2BPPV1, TYPE_NONE, DDPF_FOURCC, D3DFMT_POWERVR_2BPP, DXGI_FORMAT_UNKNOWN},				//RGB_PVRTC_2BPPV1,
			{  8, gli::dim3_t(4, 4, 1), 4,  4, true, INTERNAL_SRGB_ALPHA_PVRTC_2BPPV1, EXTERNAL_RGBA_PVRTC_4BPPV1, EXTERNAL_RGBA_PVRTC_4BPPV1, TYPE_NONE, DDPF_FOURCC, D3DFMT_POWERVR_4BPP, DXGI_FORMAT_UNKNOWN},		//RGBA_PVRTC_4BPPV1,
			{  4, gli::dim3_t(4, 4, 1), 2,  4, true, INTERNAL_SRGB_ALPHA_PVRTC_4BPPV1, EXTERNAL_RGBA_PVRTC_2BPPV1, EXTERNAL_RGBA_PVRTC_2BPPV1, TYPE_NONE, DDPF_FOURCC, D3DFMT_POWERVR_2BPP, DXGI_FORMAT_UNKNOWN},		//RGBA_PVRTC_2BPPV1,
			{ 16, gli::dim3_t(4, 4, 1), 0,  4, true, INTERNAL_SRGB8_ALPHA8_ASTC_4x4, EXTERNAL_RGBA_ASTC_4x4, EXTERNAL_RGBA_ASTC_4x4, TYPE_NONE, DDPF_FOURCC, D3DFMT_UNKNOWN, DXGI_FORMAT_UNKNOWN},						//RGBA_ASTC_4x4,
			{ 16, gli::dim3_t(5, 4, 1), 0,  4, true, INTERNAL_SRGB8_ALPHA8_ASTC_5x4, EXTERNAL_RGBA_ASTC_5x4, EXTERNAL_RGBA_ASTC_5x4, TYPE_NONE, DDPF_FOURCC, D3DFMT_UNKNOWN, DXGI_FORMAT_UNKNOWN},						//RGBA_ASTC_5x4,
			{ 16, gli::dim3_t(5, 5, 1), 0,  4, true, INTERNAL_SRGB8_ALPHA8_ASTC_5x5, EXTERNAL_RGBA_ASTC_5x5, EXTERNAL_RGBA_ASTC_5x5, TYPE_NONE, DDPF_FOURCC, D3DFMT_UNKNOWN, DXGI_FORMAT_UNKNOWN},						//RGBA_ASTC_5x5,
			{ 16, gli::dim3_t(6, 5, 1), 0,  4, true, INTERNAL_SRGB8_ALPHA8_ASTC_6x5, EXTERNAL_RGBA_ASTC_6x5, EXTERNAL_RGBA_ASTC_6x5, TYPE_NONE, DDPF_FOURCC, D3DFMT_UNKNOWN, DXGI_FORMAT_UNKNOWN},						//RGBA_ASTC_6x5,
			{ 16, gli::dim3_t(6, 6, 1), 0,  4, true, INTERNAL_SRGB8_ALPHA8_ASTC_6x6, EXTERNAL_RGBA_ASTC_6x6, EXTERNAL_RGBA_ASTC_6x6, TYPE_NONE, DDPF_FOURCC, D3DFMT_UNKNOWN, DXGI_FORMAT_UNKNOWN},						//RGBA_ASTC_6x6,
			{ 16, gli::dim3_t(8, 5, 1), 0,  4, true, INTERNAL_SRGB8_ALPHA8_ASTC_8x5, EXTERNAL_RGBA_ASTC_8x5, EXTERNAL_RGBA_ASTC_8x5, TYPE_NONE, DDPF_FOURCC, D3DFMT_UNKNOWN, DXGI_FORMAT_UNKNOWN},						//RGBA_ASTC_8x5,
			{ 16, gli::dim3_t(8, 6, 1), 0,  4, true, INTERNAL_SRGB8_ALPHA8_ASTC_8x6, EXTERNAL_RGBA_ASTC_8x6, EXTERNAL_RGBA_ASTC_8x6, TYPE_NONE, DDPF_FOURCC, D3DFMT_UNKNOWN, DXGI_FORMAT_UNKNOWN},						//RGBA_ASTC_8x6,
			{ 16, gli::dim3_t(8, 8, 1), 0,  4, true, INTERNAL_SRGB8_ALPHA8_ASTC_8x8, EXTERNAL_RGBA_ASTC_8x8, EXTERNAL_RGBA_ASTC_8x8, TYPE_NONE, DDPF_FOURCC, D3DFMT_UNKNOWN, DXGI_FORMAT_UNKNOWN},						//RGBA_ASTC_8x8,
			{ 16, gli::dim3_t(10, 5, 1), 0,  4, true, INTERNAL_SRGB8_ALPHA8_ASTC_10x5, EXTERNAL_RGBA_ASTC_10x5, EXTERNAL_RGBA_ASTC_10x5, TYPE_NONE, DDPF_FOURCC, D3DFMT_UNKNOWN, DXGI_FORMAT_UNKNOWN},					//SRGB8_ALPHA8_ASTC_10x5,
			{ 16, gli::dim3_t(10, 6, 1), 0,  4, true, INTERNAL_SRGB8_ALPHA8_ASTC_10x6, EXTERNAL_RGBA_ASTC_10x6, EXTERNAL_RGBA_ASTC_10x6, TYPE_NONE, DDPF_FOURCC, D3DFMT_UNKNOWN, DXGI_FORMAT_UNKNOWN},					//SRGB8_ALPHA8_ASTC_10x6,
			{ 16, gli::dim3_t(10, 8, 1), 0,  4, true, INTERNAL_SRGB8_ALPHA8_ASTC_10x8, EXTERNAL_RGBA_ASTC_10x8, EXTERNAL_RGBA_ASTC_10x8, TYPE_NONE, DDPF_FOURCC, D3DFMT_UNKNOWN, DXGI_FORMAT_UNKNOWN},					//SRGB8_ALPHA8_ASTC_10x8,
			{ 16, gli::dim3_t(10, 10, 1), 0,  4, true, INTERNAL_SRGB8_ALPHA8_ASTC_10x10, EXTERNAL_RGBA_ASTC_10x10, EXTERNAL_RGBA_ASTC_10x10, TYPE_NONE, DDPF_FOURCC, D3DFMT_UNKNOWN, DXGI_FORMAT_UNKNOWN},				//SRGB8_ALPHA8_ASTC_10x10,
			{ 16, gli::dim3_t(12, 10, 1), 0,  4, true, INTERNAL_SRGB8_ALPHA8_ASTC_12x10, EXTERNAL_RGBA_ASTC_12x10, EXTERNAL_RGBA_ASTC_12x10, TYPE_NONE, DDPF_FOURCC, D3DFMT_UNKNOWN, DXGI_FORMAT_UNKNOWN},				//SRGB8_ALPHA8_ASTC_12x10,
			{ 16, gli::dim3_t(12, 12, 1), 0,  4, true, INTERNAL_SRGB8_ALPHA8_ASTC_12x12, EXTERNAL_RGBA_ASTC_12x12, EXTERNAL_RGBA_ASTC_12x12, TYPE_NONE, DDPF_FOURCC, D3DFMT_UNKNOWN, DXGI_FORMAT_UNKNOWN},				//SRGB8_ALPHA8_ASTC_12x12,
		};

		GLM_STATIC_ASSERT(sizeof(Table) / sizeof(Table[0]) == gli::FORMAT_LAST + 1, "GLI error: format descriptor list doesn't match number of supported formats");
		assert(Format != FORMAT_INVALID);

		return Table[Format];
	};
*/
}//namespace detail
}//namespace gli
