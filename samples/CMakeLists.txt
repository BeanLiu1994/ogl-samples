function(glCreateSampleGTC NAME)
	set(SAMPLE_NAME ogl-${GL_VERSION_GTC}-${NAME})
	set(SHADER_DIR ${CMAKE_CURRENT_SOURCE_DIR}/../data/${GL_VERSION_GTC})

	foreach(FILE ${GL_SHADER_GTC})
 		set(SHADER_PATH ${SHADER_PATH} ${SHADER_DIR}/${FILE})
	endforeach(FILE)

	source_group("Shader Files" FILES ${SHADER_PATH})
	add_executable(${SAMPLE_NAME} ogl-${GL_VERSION_GTC}-${NAME} ${SHADER_PATH})
	add_dependencies(${SAMPLE_NAME} ${TARGET_DATA_COPY})
	target_link_libraries(${SAMPLE_NAME} ${BINARY_FILES})
endfunction(glCreateSampleGTC)

#add_subdirectory(ogl-alpha-discard)
#add_subdirectory(ogl-alpha-test)
#add_subdirectory(ogl-alpha-to-coverage)

#add_subdirectory(ogl-buffer-render)
#add_subdirectory(ogl-buffer-streaming)
#add_subdirectory(ogl-buffer-texture)

if(APPLE)
set(GL_VERSION_GTC 210)
set(GL_SHADER_GTC flat-color.vert flat-color.frag)

glCreateSampleGTC(buffer-type)
glCreateSampleGTC(buffer-update)
glCreateSampleGTC(draw-elements)
glCreateSampleGTC(draw-range)
glCreateSampleGTC(image-2d)
glCreateSampleGTC(image-2d-compressed)
glCreateSampleGTC(query-occlusion)
glCreateSampleGTC(rasterizer-viewport)
glCreateSampleGTC(sampler-anisotropy-ext)
glCreateSampleGTC(sampler-filter)
glCreateSampleGTC(sampler-wrap)
glCreateSampleGTC(test-scissor)

else(APPLE)

set(GL_VERSION_GTC 210)
set(GL_SHADER_GTC flat-color.vert flat-color.frag)

glCreateSampleGTC(buffer-type)
glCreateSampleGTC(buffer-update)
glCreateSampleGTC(draw-elements)
glCreateSampleGTC(draw-range)
glCreateSampleGTC(image-2d)
glCreateSampleGTC(image-2d-compressed)
glCreateSampleGTC(query-occlusion)
glCreateSampleGTC(rasterizer-viewport)
glCreateSampleGTC(sampler-anisotropy-ext)
glCreateSampleGTC(sampler-filter)
glCreateSampleGTC(sampler-wrap)
glCreateSampleGTC(test-scissor)

set(GL_VERSION_GTC 330)
set(GL_SHADER_GTC flat-color.vert flat-color.frag)

glCreateSampleGTC(blend-index)
glCreateSampleGTC(blend-mrt)
glCreateSampleGTC(buffer-texture)
glCreateSampleGTC(buffer-type)
glCreateSampleGTC(buffer-uniform)
glCreateSampleGTC(buffer-update)
glCreateSampleGTC(draw-base-vertex)
glCreateSampleGTC(draw-elements)
glCreateSampleGTC(draw-instanced)
glCreateSampleGTC(draw-instanced-array)
glCreateSampleGTC(draw-multiple)
glCreateSampleGTC(draw-range)
glCreateSampleGTC(fbo-blit)
glCreateSampleGTC(fbo-mipmaps)
glCreateSampleGTC(fbo-mrt)
glCreateSampleGTC(fbo-multisample)
glCreateSampleGTC(fbo-texture-multisample)
glCreateSampleGTC(fbo-srgb)
glCreateSampleGTC(image-2d)
glCreateSampleGTC(image-2d-compressed)
glCreateSampleGTC(image-array)
glCreateSampleGTC(image-rect)
glCreateSampleGTC(primitive-shader)
glCreateSampleGTC(query-conditional)
glCreateSampleGTC(query-occlusion)
glCreateSampleGTC(query-timer)
glCreateSampleGTC(rasterizer-viewport)
glCreateSampleGTC(sampler-anisotropy-ext)
glCreateSampleGTC(sampler-filter)
glCreateSampleGTC(sampler-object)
glCreateSampleGTC(sampler-swizzle)
glCreateSampleGTC(sampler-wrap)
glCreateSampleGTC(sampler-fetch)
glCreateSampleGTC(test-scissor)
glCreateSampleGTC(transform-feedback)
glCreateSampleGTC(vao)

set(GL_VERSION_GTC 400)

glCreateSampleGTC(blend-mrt)
glCreateSampleGTC(buffer-texture-rgb)
glCreateSampleGTC(draw-indirect)
glCreateSampleGTC(glsl-subroutine)
glCreateSampleGTC(primitive-instanced)
glCreateSampleGTC(primitive-tessellation)
glCreateSampleGTC(sampler-fetch)
glCreateSampleGTC(sampler-gather)
glCreateSampleGTC(transform-feedback-object)

endif(APPLE)
