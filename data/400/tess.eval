#version 400 core

layout(quads, equal_spacing, ccw) in;

in vec4 ContColor[];
out vec4 EvalColor;

vec4 interpolate(in vec4 v0, in vec4 v1, in vec4 v2, in vec4 v3)
{
	vec4 a = mix(v0, v1, gl_TessCoord.x);
	vec4 b = mix(v3, v2, gl_TessCoord.x);
	return mix(a, b, gl_TessCoord.y);
}

void main()
{	
	gl_Position = interpolate(gl_in[0].gl_Position, gl_in[1].gl_Position, gl_in[2].gl_Position, gl_in[3].gl_Position);
	EvalColor = interpolate(ContColor[0], ContColor[1], ContColor[2], ContColor[3]);
}

/*
void main()
{	
	gl_Position = vec4(0);
    float u = gl_TessCoord.x;
	float v = gl_TessCoord.y;
	float a = (1 - u) * (1 - v);
	float b = u * (1 - v);
	float c = u * v;
    float d = (1 - u) * v;
    gl_Position += a * gl_in[0].gl_Position;
    gl_Position += b * gl_in[1].gl_Position;
    gl_Position += c * gl_in[2].gl_Position;
    gl_Position += d * gl_in[3].gl_Position;
}
*/
